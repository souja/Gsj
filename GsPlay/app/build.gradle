apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion versions.complileSdk

    //签名的配置
    signingConfigs {
        release {
            storeFile file("${gradle.getGradleUserHomeDir().getParent()}/.android/key.keystore")
            storePassword '123123'
            keyAlias 'wangcaibao'
            keyPassword '123123'
        }
        debug {
//            android默认签名
         /*   storeFile file("${gradle.getGradleUserHomeDir().getParent()}/.android/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'*/

            storeFile file("${gradle.getGradleUserHomeDir().getParent()}/.android/key.keystore")
            storePassword '123123'
            keyAlias 'wangcaibao'
            keyPassword '123123'
        }

    }

    defaultConfig {
        applicationId = "com.wangxiaobao.gsj.player_2"
        resValue("string", "app_name", "成都市监管局")
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdkVersion
        versionName VERSION_NAME
        multiDexEnabled true
        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true
        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
        flavorDimensions "1"
        if ("true".equals(NEED_SIGN)) {
            signingConfig signingConfigs.release
        } else {
            signingConfig signingConfigs.debug
        }
        buildConfigField "int", "LOGFILE_MAX_SIZE", LOGFILE_MAX_SIZE
    }

//    productFlavors {
//        armv7 {
//            ndk {
//                abiFilters "armeabi-v7a", ""
//            }
//        }
//        x86 {
//            ndk {
//                abiFilters "x86", ""
//            }
//        }
//    }
    //编译类型
    buildTypes {
        dev {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "SERVER_MODE", "1"
            matchingFallbacks = ['release', 'production']
            signingConfig signingConfigs.debug
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "SERVER_MODE", "2"
            matchingFallbacks = ['release', 'production']
            signingConfig signingConfigs.debug
        }
        preview {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "SERVER_MODE", "3"
            matchingFallbacks = ['release', 'production']
            signingConfig signingConfigs.debug
        }
        production {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "SERVER_MODE", "4"
            matchingFallbacks = ['release', 'production']
            signingConfig signingConfigs.release

        }
    }

    //修改生成的apk名字及输出文件夹
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            //新名字
            def newName
            //时间戳
            def timeNow
            //输出文件夹
            timeNow = getDate() //获取时间
            def signName
            if ("true".equals(NEED_SIGN)) {
                signName = "Signed"
            } else {
                signName = "UnSigned"
            }
            newName = "${APP_NAME}_" + timeNow + "_v${VERSION_NAME}" + "_" + variant.buildType.name + "_" + signName + '.apk'
            output.outputFileName = newName

        }
    }

    lintOptions {
        disable 'MissingTranslation'
        checkReleaseBuilds false
        abortOnError false
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '27.0.3'
}

dependencies {
    implementation 'com.android.support:support-v4:26.1.0'
    compile fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation('com.jakewharton:butterknife:8.8.1') {
        exclude group: 'com.android.support'
    }
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.zhy:okhttputils:2.6.2'
    compile 'com.google.code.gson:gson:2.8.4'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.qiniu:qiniu-android-sdk:7.0.10'
    compile 'com.tencent.bugly:crashreport:2.6.6.1'
    compile 'com.umeng.analytics:analytics:6.1.4'

    compile 'com.orhanobut:logger:1.15'
//    compile 'com.orhanobut:dialogplus:1.11@aar'
    compile 'com.j256.ormlite:ormlite-android:5.0'
    compile 'com.android.support:multidex:1.0.1'

    implementation project(':pulltorefreshlibrary')
    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'
    compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    compile 'de.hdodenhof:circleimageview:2.2.0'
    compile 'com.makeramen:roundedimageview:2.2.1'

    compile 'io.reactivex.rxjava2:rxjava:2.1.5'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    compile 'me.jessyan:retrofit-url-manager:1.1.0'
    compile 'com.github.bumptech.glide:glide:4.0.0'
    compile 'com.github.TangHaifeng-John:Logger:1.0.7'

    implementation 'com.hedgehog.ratingbar:app:1.1.2'
    implementation 'com.amap.api:map2d:5.2.0'
    implementation 'com.amap.api:location:4.2.0'
    implementation 'com.amap.api:search:5.0.0'

    implementation 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3'
    implementation 'com.github.razerdp:AnimatedPieView:1.2.4'
    implementation 'com.uber.autodispose:autodispose:0.8.0'
    implementation 'com.uber.autodispose:autodispose-android-archcomponents:0.8.0'

    implementation 'com.czt.mp3recorder:library:1.0.4'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.15'
    implementation 'com.github.loonggg:RecyclerViewBanner:v1.2.3'
}
//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format("yyyyMMdd_HHmmss")
    return formattedDate
}